[{"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\index.js":"1","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\App.js":"2","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\reportWebVitals.js":"3","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Header.js":"4","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\SearchBar.js":"5","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Graph.js":"6"},{"size":478,"mtime":1606872903573,"results":"7","hashOfConfig":"8"},{"size":805,"mtime":1607198436670,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":408,"mtime":1607202546087,"results":"11","hashOfConfig":"8"},{"size":2265,"mtime":1607205219076,"results":"12","hashOfConfig":"8"},{"size":3637,"mtime":1607179115364,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"w5bqhe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\index.js",[],["28","29"],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\App.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Header.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\SearchBar.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Graph.js",["30","31","32"],"import React, { useEffect, useState } from 'react'\r\nimport { Line, defaults } from 'react-chartjs-2';\r\n\r\nfunction Graph({ fetchedData }) {\r\n\r\n    defaults.global.defaultFontColor = '#080B22'\r\n    defaults.global.defaultFontStyle = '800'\r\n    defaults.global.defaultFontSize = 15\r\n    defaults.global.defaultFontFamily = 'Nunito'\r\n\r\n    const [labels, setLabels] = useState([])\r\n    const [graphData, setGraphData] = useState([])\r\n    const [resultsArray, setResultsArray] = ([])\r\n    const [coinList, setCoinList] = useState([])\r\n    const [currentCoin, setCurrentCoin] = useState(\"\")\r\n\r\n    //Whenever the data is fetched / dates are fetched\r\n    useEffect(() => {\r\n        if (fetchedData.rates) {\r\n            const manageFetchedData = () => {\r\n\r\n                let labelsArray = []\r\n                let graphDataArray = []\r\n                let coinSelect = []\r\n\r\n                Object.keys(fetchedData.rates).forEach(value => {\r\n                    //Get the labels of the dates to display on the graph\r\n                    labelsArray.push(value)\r\n                    graphDataArray.push(fetchedData.rates[value])\r\n                  });\r\n                setLabels(labelsArray)\r\n\r\n                //Get selectable coins for the coin selector input\r\n                Object.keys(graphDataArray[0]).forEach(value => {\r\n                    coinSelect.push(value)\r\n                })\r\n                setCoinList(coinSelect)\r\n            \r\n                let data = []\r\n                graphDataArray.forEach((value) => {\r\n                    data.push(value.AED)\r\n                })\r\n                setGraphData(data)\r\n            }\r\n            manageFetchedData()\r\n        }\r\n        \r\n    }, [fetchedData])\r\n\r\n    //Map trough the coin values and display it on the input select\r\n    const inputSelectCoin = coinList.map((value) => {\r\n        return(<option value={value} key={value}>{value}</option>)\r\n    })\r\n\r\n    //OnChange function for the coin select\r\n    const changeCoin = (e) => {\r\n        setCurrentCoin(e.target.value)\r\n    }\r\n\r\n    //Graphic display options\r\n    const graphOptions = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                fill: true,\r\n                lineTension: 0.3,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: '#56F0A3',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#080B22',\r\n                pointBackgroundColor: '#080B22',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 3,\r\n                pointHitRadius: 10,\r\n                data: graphData\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column', background: '#F1F1F1', padding: '4em', minHeight: '600px'}}>\r\n            {fetchedData.rates ?\r\n                <select style={{padding: '0.5em 1.5em', borderRadius: '10px', marginBottom: '2em'}} onChange={changeCoin}>\r\n                    {inputSelectCoin}\r\n                </select> :\r\n                <></>\r\n            }\r\n            <div style={{ position: 'relative', width: '1200px' }}>\r\n                {fetchedData.rates ? <Line data={graphOptions} /> : <></>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":12,"nodeType":"39","messageId":"40","endLine":13,"endColumn":24},{"ruleId":"37","severity":1,"message":"41","line":13,"column":26,"nodeType":"39","messageId":"40","endLine":13,"endColumn":41},{"ruleId":"37","severity":1,"message":"42","line":15,"column":12,"nodeType":"39","messageId":"40","endLine":15,"endColumn":23},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'resultsArray' is assigned a value but never used.","Identifier","unusedVar","'setResultsArray' is assigned a value but never used.","'currentCoin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]