[{"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\index.js":"1","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\App.js":"2","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\reportWebVitals.js":"3","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Header.js":"4","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\SearchBar.js":"5","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Graph.js":"6"},{"size":478,"mtime":1606872903573,"results":"7","hashOfConfig":"8"},{"size":884,"mtime":1606924051615,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":406,"mtime":1606874139048,"results":"11","hashOfConfig":"8"},{"size":2027,"mtime":1606923986552,"results":"12","hashOfConfig":"8"},{"size":3437,"mtime":1607083921969,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"w5bqhe",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\index.js",[],["30","31"],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\App.js",["32"],"import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\nimport Header from './components/Header'\nimport SearchBar from './components/SearchBar'\nimport Graph from './components/Graph'\n\nfunction App() {\n\n  const [fetchUrl, setFetchUrl] = useState('')\n  const [data, setData] = useState({})\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    if (fetchUrl.length > 0) {\n      const fetchCoins = async () => {\n        const result = await axios(fetchUrl)\n        setData(result.data)\n        setIsLoading(false)\n      }\n      fetchCoins()\n    }\n\n  }, [fetchUrl])\n\n  const changeUrl = (fd, ld) => {\n    setFetchUrl(`https://api.exchangerate.host/timeseries?start_date=${fd}&end_date=${ld}`)\n  }\n\nreturn (\n  <>\n    <Header />\n    <SearchBar changeUrl={changeUrl} />\n    <Graph fetchedData={data} />\n  </>\n);\n\n}\n\nexport default App;\n","C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Header.js",[],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\SearchBar.js",[],["33","34"],"C:\\Users\\Jotha Marques\\Desktop\\real_react\\crypto-app\\src\\components\\Graph.js",["35","36","37"],"import React, { useEffect, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction Graph({ fetchedData }) {\r\n\r\n    const [labels, setLabels] = useState([])\r\n    const [graphData, setGraphData] = useState([])\r\n    const [resultsArray, setResultsArray] = ([])\r\n    const [coinList, setCoinList] = useState([])\r\n    const [currentCoin, setCurrentCoin] = useState(\"\")\r\n\r\n    //Whenever the data is fetched / dates are fetched\r\n    useEffect(() => {\r\n        if (fetchedData.rates) {\r\n            const manageFetchedData = () => {\r\n\r\n                let labelsArray = []\r\n                let graphDataArray = []\r\n                let coinSelect = []\r\n\r\n                Object.keys(fetchedData.rates).forEach(value => {\r\n                    //Get the labels of the dates to display on the graph\r\n                    labelsArray.push(value)\r\n                    graphDataArray.push(fetchedData.rates[value])\r\n                  });\r\n                setLabels(labelsArray)\r\n\r\n                //Get selectable coins for the coin selector input\r\n                Object.keys(graphDataArray[0]).forEach(value => {\r\n                    coinSelect.push(value)\r\n                })\r\n                setCoinList(coinSelect)\r\n            \r\n                let data = []\r\n                graphDataArray.forEach((value) => {\r\n                    data.push(value.AED)\r\n                })\r\n                setGraphData(data)\r\n            }\r\n            manageFetchedData()\r\n        }\r\n        \r\n    }, [fetchedData])\r\n\r\n    //Map trough the coin values and display it on the input select\r\n    const inputSelectCoin = coinList.map((value) => {\r\n        return(<option value={value} key={value}>{value}</option>)\r\n    })\r\n\r\n    //OnChange function for the coin select\r\n    const changeCoin = (e) => {\r\n        setCurrentCoin(e.target.value)\r\n    }\r\n\r\n    //Graphic display options\r\n    const graphOptions = {\r\n        labels: labels,\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                fill: true,\r\n                lineTension: 0.3,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: '#56F0A3',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: '#080B22',\r\n                pointBackgroundColor: '#080B22',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 3,\r\n                pointHitRadius: 10,\r\n                data: graphData\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column', background: '#F1F1F1', padding: '4em', minHeight: '600px'}}>\r\n            {fetchedData.rates ?\r\n                <select style={{padding: '0.5em 1.5em', borderRadius: '10px', marginBottom: '2em'}} onChange={changeCoin}>\r\n                    {inputSelectCoin}\r\n                </select> :\r\n                <></>\r\n            }\r\n            <div style={{ position: 'relative', width: '1200px' }}>\r\n                {fetchedData.rates ? <Line data={graphOptions} /> : <></>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":12,"column":10,"nodeType":"44","messageId":"45","endLine":12,"endColumn":19},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},{"ruleId":"42","severity":1,"message":"48","line":8,"column":12,"nodeType":"44","messageId":"45","endLine":8,"endColumn":24},{"ruleId":"42","severity":1,"message":"49","line":8,"column":26,"nodeType":"44","messageId":"45","endLine":8,"endColumn":41},{"ruleId":"42","severity":1,"message":"50","line":10,"column":12,"nodeType":"44","messageId":"45","endLine":10,"endColumn":23},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar",["51"],["52"],"'resultsArray' is assigned a value but never used.","'setResultsArray' is assigned a value but never used.","'currentCoin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]